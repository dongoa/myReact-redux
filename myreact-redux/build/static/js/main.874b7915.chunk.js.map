{"version":3,"sources":["components/Header.js","containers/Header.js","components/ThemeSwitch.js","containers/ThemeSwitch.js","containers/Content.js","index.js"],"names":["Header","react_default","a","createElement","style","color","this","props","themeColor","Component","connect","state","ThemeSwitch","onSwitchColor","onClick","handleSwitchColor","bind","dispatch","console","log","type","Content","containers_ThemeSwitch","store","createStore","action","Object","objectSpread","Index","containers_Header","containers_Content","ReactDOM","render","es","src_Index","document","getElementById"],"mappings":"uPAEqBA,mLAOnB,OACCC,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAAEC,MAAMC,KAAKC,MAAMC,aAA9B,+BARiCC,aCQrBC,cAPS,SAACC,GACxB,MAAO,CACNH,WAAYG,EAAMH,aAKLE,CAAyBV,GCPnBY,4LAKDP,GACdC,KAAKC,MAAMM,eACbP,KAAKC,MAAMM,cAAcR,oCAK3B,OACCJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAAEC,MAAMC,KAAKC,MAAMC,YAClCM,QAASR,KAAKS,kBAAkBC,KAAKV,KAAK,QAD1C,OAGAL,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAAEC,MAAMC,KAAKC,MAAMC,YAClCM,QAASR,KAAKS,kBAAkBC,KAAKV,KAAK,SAD1C,gBAjBsCG,aCc1BC,cAdO,SAACC,GACtB,MAAO,CACNH,WAAWG,EAAMH,aAGM,SAACS,GACzB,MAAO,CACNJ,cAAc,SAACR,GACda,QAAQC,IAAId,GACZY,EAAS,CAAEG,KAAK,eAAeZ,WAAWH,OAK9BK,CAA6CE,GCZtDS,mLAOJ,OACCpB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,MAAO,CAAEC,MAAMC,KAAKC,MAAMC,aAA7B,qCACAP,EAAAC,EAAAC,cAACmB,EAAD,cAVmBb,aAsBPY,EADfA,EAAUX,YALc,SAACC,GACxB,MAAO,CACNH,WAAYG,EAAMH,aAGVE,CAAyBW,WCO7BE,EAAQC,YAZK,SAACb,EAAMc,GACzB,IAAId,EAAO,MAAO,CACjBH,WAAW,OAEZ,OAAOiB,EAAOL,MACb,IAAK,eACJ,OAAOM,OAAAC,EAAA,EAAAD,CAAA,GAAKf,EAAZ,CAAkBH,WAAWiB,EAAOjB,aACrC,QACC,OAAOG,KAMJiB,mLAGJ,OACC3B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0B,EAAD,MACA5B,EAAAC,EAAAC,cAAC2B,EAAD,cANiBrB,aAYpBsB,IAASC,OACR/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAUV,MAAOA,GACjBtB,EAAAC,EAAAC,cAAC+B,EAAD,OAEAC,SAASC,eAAe","file":"static/js/main.874b7915.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport default class Header extends Component{\r\n\tstatic propTypes={\r\n\t\tthemeColor:PropTypes.string\r\n\t}\r\n\t\r\n\trender(){\r\n\t\t// console.log('查看header-color',this.props.themeColor);\r\n\t\treturn(\r\n\t\t\t<h1 style={{ color:this.props.themeColor }}>React.js小书</h1>\r\n\t\t\t)\r\n\t}\r\n}\r\n","import { connect } from 'react-redux'\r\nimport Header from '../components/Header'\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tthemeColor: state.themeColor\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Header)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class ThemeSwitch extends Component{\r\n\tstatic propTypes={\r\n\t\t\tthemeColor:PropTypes.string,\r\n\t\t\tonSwitchColor:PropTypes.func\r\n\t\t}\r\n\t\thandleSwitchColor(color){\r\n\t\t\tif(this.props.onSwitchColor){\r\n\t\t\t\tthis.props.onSwitchColor(color)\r\n\t\t\t}\r\n\t\t}\r\n\trender(){\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<button style={{ color:this.props.themeColor }}\r\n\t\t\tonClick={this.handleSwitchColor.bind(this,'red')}\r\n\t\t\t>Red</button>\r\n\t\t\t<button style={{ color:this.props.themeColor }}\r\n\t\t\tonClick={this.handleSwitchColor.bind(this,'blue')}\r\n\t\t\t>Blue</button>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n","import { connect } from 'react-redux'\r\nimport ThemeSwitch from '../components/ThemeSwitch'\r\n\r\nconst mapStateToProps=(state)=>{\r\n\treturn {\r\n\t\tthemeColor:state.themeColor\r\n\t}\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n\treturn {\r\n\t\tonSwitchColor:(color)=>{\r\n\t\t\tconsole.log(color);\r\n\t\t\tdispatch({ type:'CHANGE_COLOR',themeColor:color })\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeSwitch)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ThemeSwitch from './ThemeSwitch'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Content extends Component{\r\n\tstatic propTypes = {\r\n\t\tthemeColor: PropTypes.string\r\n\t}\r\n\t\r\n\trender(){\r\n\t\t// console.log('这里是Content,查看props',this.props)\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<p style={{ color:this.props.themeColor }}>React.js 小书内容</p>\r\n\t\t\t<ThemeSwitch />\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tthemeColor: state.themeColor\r\n\t}\r\n}\r\nContent = connect(mapStateToProps)(Content)\r\nexport default Content","import React,{ Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PropTypes from 'prop-types'\nimport Header from './containers/Header'\nimport Content from './containers/Content'\nimport { Provider }  from 'react-redux'\nimport { createStore } from 'redux'\n// function createStore(reducer){\n// \tlet state=null\n// \tconst listeners = []\n// \tconst subscribe=(listener)=>listeners.push(listener)\n// \tconst getState=()=>state\n// \tconst dispatch=(action)=>{\n// \t\tstate = reducer(state,action)\n// \t\tlisteners.forEach((listener)=>listener())\n// \t}\n// \tdispatch({})\n// \treturn { getState, dispatch, subscribe }\n// }\n\nconst themeReducer=(state,action)=>{\n\tif(!state) return {\n\t\tthemeColor:'red'\n\t}\n\tswitch(action.type){\n\t\tcase 'CHANGE_COLOR':\n\t\t\treturn { ...state,themeColor:action.themeColor }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst store = createStore(themeReducer)\n\nclass Index extends Component{\n\t\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t<Header />\n\t\t\t<Content />\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nReactDOM.render(\n\t<Provider store={store}>\n\t<Index />\n\t</Provider>,\n\tdocument.getElementById('root')\n)"],"sourceRoot":""}